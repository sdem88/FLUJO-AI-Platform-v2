import React, { useState } from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Box,
  Chip,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Alert
} from '@mui/material';
import { ExpandMore, Psychology, Speed, Lightbulb } from '@mui/icons-material';

interface ModelParametersGuideProps {
  open: boolean;
  onClose: () => void;
}

const parameterGuide = {
  temperature: {
    title: 'Temperature (–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)',
    description: '–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤',
    icon: <Psychology />,
    ranges: [
      { value: '0.0 - 0.2', label: '–¢–æ—á–Ω–æ—Å—Ç—å', description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–µ, –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞, —Ä–∞—Å—á–µ—Ç–æ–≤, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.', color: 'success', examples: ['–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö', '–ö–æ–¥-—Ä–µ–≤—å—é', '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã'] },
      { value: '0.3 - 0.7', label: '–ë–∞–ª–∞–Ω—Å', description: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á.', color: 'primary', examples: ['–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π', '–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã', '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'] },
      { value: '0.8 - 1.0', label: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å', description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ. –î–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–¥–µ–π.', color: 'warning', examples: ['–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', '–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º', '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã'] }
    ]
  },
  maxTokens: {
    title: 'Max Tokens (–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤)',
    description: '–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏',
    icon: <Speed />,
    ranges: [
      { value: '500 - 1000', label: '–ö—Ä–∞—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã', description: '–î–ª—è –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π, –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á.', color: 'info', examples: ['–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã', '–ö–æ—Ä–æ—Ç–∫–∏–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è', '–°–ø–∏—Å–∫–∏'] },
      { value: '1000 - 4000', label: '–°—Ä–µ–¥–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã', description: '–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á, –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.', color: 'primary', examples: ['–°—Ç–∞—Ç—å–∏', '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'] },
      { value: '4000 - 8000', label: '–î–ª–∏–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã', description: '–î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤.', color: 'warning', examples: ['–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', '–î–ª–∏–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑'] }
    ]
  },
  topP: {
    title: 'Top P (Nucleus Sampling)',
    description: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è',
    icon: <Lightbulb />,
    ranges: [
      { value: '0.1 - 0.5', label: '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π', description: '–í—ã–±–æ—Ä –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –ë–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –æ—Ç–≤–µ—Ç—ã.', color: 'success', examples: ['–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏', '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è'] },
      { value: '0.6 - 0.9', label: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π', description: '–•–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å—é –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º.', color: 'primary', examples: ['–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∑–∞–¥–∞—á', '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ'] },
      { value: '0.9 - 1.0', label: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π', description: '–ë–æ–ª—å—à–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.', color: 'warning', examples: ['–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏', '–ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤'] }
    ]
  }
};

const recommendedSettings = [
  {
    category: '–ê–Ω–∞–ª–∏–∑ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
    icon: 'üî¨',
    settings: { temperature: 0.1, maxTokens: 4000, topP: 0.3 },
    description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á',
    useCases: ['–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö', '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑']
  },
  {
    category: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
    icon: '‚úçÔ∏è',
    settings: { temperature: 0.7, maxTokens: 2000, topP: 0.8 },
    description: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –∫–∞—á–µ—Å—Ç–≤–∞',
    useCases: ['–°—Ç–∞—Ç—å–∏', '–ü–æ—Å—Ç—ã –≤ —Å–æ—Ü—Å–µ—Ç–∏', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã', '–û–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤']
  },
  {
    category: '–ö–æ–¥ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    icon: 'üíª',
    settings: { temperature: 0.2, maxTokens: 3000, topP: 0.4 },
    description: '–¢–æ—á–Ω–æ—Å—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å—é',
    useCases: ['–ù–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞', '–û—Ç–ª–∞–¥–∫–∞', '–ö–æ–¥-—Ä–µ–≤—å—é', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è']
  },
  {
    category: '–û–±—É—á–µ–Ω–∏–µ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è',
    icon: 'üéì',
    settings: { temperature: 0.4, maxTokens: 2500, topP: 0.6 },
    description: '–Ø—Å–Ω–æ—Å—Ç—å —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –∞–Ω–∞–ª–æ–≥–∏—è–º–∏',
    useCases: ['–û–±—ä—è—Å–Ω–µ–Ω–∏—è', '–û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', 'FAQ', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏']
  },
  {
    category: '–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º',
    icon: 'üí°',
    settings: { temperature: 0.9, maxTokens: 1500, topP: 0.9 },
    description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏–¥–µ–π',
    useCases: ['–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π', '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏', '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏']
  },
  {
    category: '–ë–∏–∑–Ω–µ—Å-–æ–±—â–µ–Ω–∏–µ',
    icon: 'üíº',
    settings: { temperature: 0.3, maxTokens: 1000, topP: 0.5 },
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω —Å —á–µ—Ç–∫–æ—Å—Ç—å—é',
    useCases: ['–î–µ–ª–æ–≤—ã–µ –ø–∏—Å—å–º–∞', '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏', '–û—Ç—á–µ—Ç—ã', '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏']
  }
];

export const ModelParametersGuide: React.FC<ModelParametersGuideProps> = ({
  open,
  onClose
}) => {
  const [selectedPreset, setSelectedPreset] = useState<string | null>(null);

  return (
    <Dialog 
      open={open} 
      onClose={onClose}
      maxWidth="lg"
      fullWidth
      PaperProps={{
        sx: { minHeight: '80vh' }
      }}
    >
      <DialogTitle>
        <Typography variant="h5">
          üéØ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ AI –º–æ–¥–µ–ª–µ–π
        </Typography>
        <Typography variant="subtitle1" color="text.secondary">
          –ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        </Typography>
      </DialogTitle>

      <DialogContent>
        <Alert severity="info" sx={{ mb: 3 }}>
          <Typography variant="body2">
            üí° <strong>–°–æ–≤–µ—Ç:</strong> –ù–∞—á–Ω–∏—Ç–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∏–∂–µ, 
            –∑–∞—Ç–µ–º —Ç–æ–Ω–∫–æ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥ —Å–≤–æ–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏.
          </Typography>
        </Alert>

        {/* Recommended Settings */}
        <Typography variant="h6" gutterBottom sx={{ mt: 3 }}>
          üöÄ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        </Typography>
        
        <Box sx={{ mb: 4 }}>
          {recommendedSettings.map((preset, index) => (
            <Accordion 
              key={index}
              expanded={selectedPreset === preset.category}
              onChange={() => setSelectedPreset(
                selectedPreset === preset.category ? null : preset.category
              )}
            >
              <AccordionSummary expandIcon={<ExpandMore />}>
                <Box display="flex" alignItems="center" gap={2}>
                  <Typography variant="h6">
                    {preset.icon} {preset.category}
                  </Typography>
                  <Chip 
                    label={`T: ${preset.settings.temperature}`} 
                    size="small" 
                    color="primary" 
                  />
                  <Chip 
                    label={`Tokens: ${preset.settings.maxTokens}`} 
                    size="small" 
                    color="secondary" 
                  />
                </Box>
              </AccordionSummary>
              <AccordionDetails>
                <Box>
                  <Typography variant="body1" paragraph>
                    {preset.description}
                  </Typography>
                  
                  <Typography variant="subtitle2" gutterBottom>
                    –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
                  </Typography>
                  <Box display="flex" gap={2} mb={2}>
                    <Chip 
                      label={`Temperature: ${preset.settings.temperature}`} 
                      color="primary" 
                    />
                    <Chip 
                      label={`Max Tokens: ${preset.settings.maxTokens}`} 
                      color="secondary" 
                    />
                    <Chip 
                      label={`Top P: ${preset.settings.topP}`} 
                      color="info" 
                    />
                  </Box>
                  
                  <Typography variant="subtitle2" gutterBottom>
                    –õ—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è:
                  </Typography>
                  <Box display="flex" flexWrap="wrap" gap={1}>
                    {preset.useCases.map((useCase, idx) => (
                      <Chip 
                        key={idx}
                        label={useCase} 
                        variant="outlined" 
                        size="small" 
                      />
                    ))}
                  </Box>
                </Box>
              </AccordionDetails>
            </Accordion>
          ))}
        </Box>

        {/* Detailed Parameter Guide */}
        <Typography variant="h6" gutterBottom>
          üìä –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
        </Typography>

        {Object.entries(parameterGuide).map(([key, param]) => (
          <Accordion key={key} sx={{ mb: 2 }}>
            <AccordionSummary expandIcon={<ExpandMore />}>
              <Box display="flex" alignItems="center" gap={2}>
                {param.icon}
                <Typography variant="h6">{param.title}</Typography>
              </Box>
            </AccordionSummary>
            <AccordionDetails>
              <Typography variant="body1" paragraph>
                {param.description}
              </Typography>
              
              <TableContainer component={Paper} variant="outlined">
                <Table size="small">
                  <TableHead>
                    <TableRow>
                      <TableCell>–ó–Ω–∞—á–µ–Ω–∏–µ</TableCell>
                      <TableCell>–†–µ–∂–∏–º</TableCell>
                      <TableCell>–û–ø–∏—Å–∞–Ω–∏–µ</TableCell>
                      <TableCell>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {param.ranges.map((range, idx) => (
                      <TableRow key={idx}>
                        <TableCell>
                          <Typography variant="body2" fontWeight="bold">
                            {range.value}
                          </Typography>
                        </TableCell>
                        <TableCell>
                          <Chip 
                            label={range.label} 
                            color={range.color as any} 
                            size="small" 
                          />
                        </TableCell>
                        <TableCell>
                          <Typography variant="body2">
                            {range.description}
                          </Typography>
                        </TableCell>
                        <TableCell>
                          <Box display="flex" flexWrap="wrap" gap={0.5}>
                            {range.examples.map((example, exIdx) => (
                              <Chip 
                                key={exIdx}
                                label={example} 
                                variant="outlined" 
                                size="small" 
                                sx={{ fontSize: '0.7rem' }}
                              />
                            ))}
                          </Box>
                        </TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>
            </AccordionDetails>
          </Accordion>
        ))}

        {/* Tips Section */}
        <Alert severity="success" sx={{ mt: 3 }}>
          <Typography variant="subtitle2" gutterBottom>
            üí° –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:
          </Typography>
          <ul style={{ margin: 0, paddingLeft: '20px' }}>
            <li>–ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –Ω–∏–∑–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (0.1-0.3) –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –∑–∞–¥–∞—á</li>
            <li>–£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
            <li>–î–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Temperature 0.1-0.2 –∏ Top P 0.3-0.5</li>
            <li>–î–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á Temperature 0.7-0.9 –∏ Top P 0.8-0.9</li>
            <li>Max Tokens –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–ª–∏–Ω—É, –Ω–æ –Ω–µ –∫–∞—á–µ—Å—Ç–≤–æ - –Ω–µ —ç–∫–æ–Ω–æ–º—å—Ç–µ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á</li>
          </ul>
        </Alert>
      </DialogContent>

      <DialogActions>
        <Button onClick={onClose} variant="contained">
          –ü–æ–Ω—è—Ç–Ω–æ, —Å–ø–∞—Å–∏–±–æ!
        </Button>
      </DialogActions>
    </Dialog>
  );
};